{"version":3,"sources":["assets\\SuShiCarb\\scripts\\ShuShiCarb.Global.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;AAIlF;IAAA;IA4DA,CAAC;IAxBG,4BAA4B;IAC5B,uBAAuB;IAEvB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,+BAA+B;IAC/B,sBAAsB;IACtB,yBAAyB;IACzB,QAAQ;IAER,sCAAsC;IACtC,IAAI;IAEU,mBAAY,GAA1B,UAA2B,GAAW,EAAE,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QACtD,IAAI,GAAG,IAAI,CAAC;YACR,OAAO,GAAG,CAAC;QACf,IAAI,MAAM,IAAI,CAAC,EAAE;YACb,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;SACpE;QACD,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;IAC/D,CAAC;IAxDM,mBAAY,GAAiB,IAAI,CAAA;IACjC,gBAAS,GAAW,CAAC,CAAC;IACtB,eAAQ,GAAG,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,EAAC;QACpD,EAAC,KAAK,EAAE,GAAG,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,EAAC;QACrC,EAAC,KAAK,EAAE,GAAG,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,EAAC;QACrC,EAAC,KAAK,EAAE,GAAG,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,EAAC;QACrC,EAAC,KAAK,EAAE,GAAG,EAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,GAAE,CAAC,CAAC;IAErC,mBAAY,GAAG,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACxC,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACrB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACrB,EAAC,KAAK,EAAE,GAAG,EAAC,IAAI,EAAE,CAAC,EAAC;QACpB,EAAC,KAAK,EAAE,GAAG,EAAC,IAAI,EAAE,CAAC,EAAC;KACvB,CAAA;IAEM,oBAAa,GAAG,CAAC,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACzC,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACrB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACrB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;QACrB,EAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAC;KACxB,CAAA;IAEM,gBAAS,GAAG,EAAE,CAAC;IACf,oBAAa,GAAG,KAAK,CAAC;IACtB,gBAAS,GAAG,EAAE,CAAC;IACf,eAAQ,GAAG,EAAE,CAAC;IACd,iBAAU,GAAG,EAAE,CAAC;IAChB,gBAAS,GAAG,IAAI,CAAC;IACjB,gBAAS,GAAG,IAAI,CAAC;IACjB,gBAAS,GAAW,CAAC,CAAC;IACtB,eAAQ,GAAW,CAAC,CAAC;IACrB,gBAAS,GAAW,CAAC,CAAC;IAEtB,uBAAgB,GAAG,KAAK,CAAC,CAAC,eAAe;IA0BpD,aAAC;CA5DD,AA4DC,IAAA;kBA5DoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport SoundManager from \"./ShuShiCarb.SoundManager\";\r\n\r\nexport default class Global {\r\n    static soundManager: SoundManager = null\r\n    static totalGold: number = 0;\r\n    static dataHook = [{price: 150,speed: 1.5, widthHook: 3}, // id 0\r\n        {price: 300,speed: 1.5, widthHook: 4}, \r\n        {price: 450,speed: 1.5, widthHook: 4},\r\n        {price: 600,speed: 1.5, widthHook: 4},\r\n        {price: 750,speed: 2.5, widthHook: 6,}];\r\n\r\n    static dataBagMoney = [{price: 120, gold: 1}, // id 1\r\n        {price: 250, gold: 2},\r\n        {price: 320, gold: 2},\r\n        {price: 450,gold: 2},\r\n        {price: 750,gold: 4}\r\n    ]\r\n\r\n    static dataTimeHappy = [{price: 120, time: 2}, //id 2\r\n        {price: 250, time: 2},\r\n        {price: 320, time: 2},\r\n        {price: 450, time: 2},\r\n        {price: 750, time: 4}\r\n    ]\r\n    \r\n    static timeHappy = 10;\r\n    static checkBagMoney = false;\r\n    static speedHook = 20;\r\n    static moneyBag = 10;\r\n    static lengthHook = 40;\r\n    static isMusicOn = true;\r\n    static isSoundOn = true;\r\n    static hookIndex: number = 0;\r\n    static bagIndex: number = 0;\r\n    static timeIndex: number = 0;\r\n    \r\n    static timeHappyUpdated = false; // Thêm biến cờ\r\n\r\n    // static formatNumber(mo) {\r\n    //     let format = \"\";\r\n\r\n    //     if (mo >= 1000000) {\r\n    //         mo /= 1000000;\r\n    //         format = \" M\";\r\n    //     } else if (mo >= 1000) {\r\n    //         mo /= 1000;\r\n    //         format = \" K\";\r\n    //     }\r\n\r\n    //     return Math.floor(mo) + format;\r\n    // }\r\n\r\n    public static formatNumber(num: number, digits: number = 0): string { \r\n        if (num == 0) \r\n            return \"0\"; \r\n        if (digits != 0) { \r\n            return num.toFixed(digits).replace(/(\\d)(?=(\\d{3})+\\.)/g, '$1,'); \r\n        } \r\n        return num.toFixed().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\"); \r\n    }\r\n    // static dataHook = [1,23];\r\n    \r\n}\r\n"]}