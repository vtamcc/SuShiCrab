{"version":3,"sources":["assets/SuShiCarb/scripts/Game/ShuShiCard.CollierManager.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;;;;;;;;;;;;;;;;;;;;;AAElF,sDAAgD;AAChD,qDAA+C;AAEzC,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAqC,2BAAY;IAAjD;;IA2BA,CAAC;IAzBG,kCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,yBAAc,CAAC,CAAC,EAAE,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;YACtB,yBAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,yBAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC3D;IAEL,CAAC;IAED,wBAAwB;IAExB,wBAAM,GAAN;QACI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAA;QAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,uBAAK,GAAL;IAEA,CAAC;IAxBgB,OAAO;QAD3B,OAAO;OACa,OAAO,CA2B3B;IAAD,cAAC;CA3BD,AA2BC,CA3BoC,EAAE,CAAC,SAAS,GA2BhD;kBA3BoB,OAAO","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport ShuShiCarbGame from \"../ShuShiCarb.Game\";\nimport ShuShiCarbFood from \"./ShuShiCarb.Food\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Collier extends cc.Component {\n\n    onCollisionEnter(other, self) {\n        let food = this.node.getComponent(ShuShiCarbFood).id;\n        console.log(food);\n        \n        if (other.tag == 1) {\n            console.log(\"va cham\")\n            ShuShiCarbGame.instance.arrResult.push(food);\n            console.log(\"sdasd\", ShuShiCarbGame.instance.arrResult);\n        }\n\n    }\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let node = cc.director.getCollisionManager()\n        node.enabled = true;\n        node.enabledDebugDraw = true;\n    }\n\n    start () {\n\n    }\n\n    // update (dt) {}\n}\n"]}