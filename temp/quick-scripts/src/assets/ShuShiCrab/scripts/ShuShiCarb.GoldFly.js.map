{"version":3,"sources":["assets/SuShiCarb/scripts/ShuShiCarb.GoldFly.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ShuShiCarbGoldFly extends cc.Component {\n  public static instance: ShuShiCarbGoldFly = null;\n \n  @property(cc.Prefab)\n  coinPrefab: cc.Prefab = null;\n\n  coinPool: cc.NodePool = null;\n\n  onLoad() {\n    ShuShiCarbGoldFly.instance = this;\n    this.coinPool = new cc.NodePool();\n    this.initCoinPool();\n  }\n\n  initCoinPool(count: number = 5) {\n    for (let i = 0; i < count; i++) {\n      let coin = cc.instantiate(this.coinPrefab);\n      this.coinPool.put(coin);\n    }\n  }\n\n  playAnim(startPos: cc.Node, endPos: cc.Node, nodeEffect: cc.Node) {\n    let randomCount = 5;\n    let stPos = startPos.getPosition();\n    let edPos = endPos.getPosition();\n    this.playCoinFlyAnim(randomCount, stPos, edPos);\n    nodeEffect.active = true;\n    cc.tween(nodeEffect)\n    .to(1.2, {y:edPos.y})\n    .call(() => {\n        nodeEffect.y = 0;\n        nodeEffect.active = false;\n    })\n    .start();\n  }\n\n  playCoinFlyAnim(count: number, stPos: cc.Vec2, edPos: cc.Vec2, r: number = 130) {\n    // 确保当前节点池有足够的金币\n    const poolSize = this.coinPool.size();\n    const reCreateCoinCount = poolSize > count ? 0 : count - poolSize;\n    this.initCoinPool(reCreateCoinCount);\n\n    // 生成圆，并且对圆上的点进行排序\n    let points = this.getCirclePoints(r, stPos, count);\n    let coinNodeList = points.map(pos => {\n      let coin = this.coinPool.get();\n      coin.setPosition(stPos);\n      this.node.addChild(coin);\n      return {\n        node: coin,\n        stPos: stPos,\n        mdPos: pos,\n        edPos: edPos,\n        dis: (pos as any).sub(edPos).mag()\n      };\n    });\n    coinNodeList = coinNodeList.sort((a, b) => {\n      if (a.dis - b.dis > 0) return 1;\n      if (a.dis - b.dis < 0) return -1;\n      return 0;\n    });\n\n    // 执行金币落袋的动画\n    coinNodeList.forEach((item, idx) => {\n      item.node.runAction(\n        cc.sequence(\n          cc.moveTo(0.3, item.mdPos),\n          cc.delayTime(idx * 0.01),\n          cc.moveTo(0.5, item.edPos),\n          cc.callFunc(() => {\n            this.coinPool.put(item.node);\n          })\n        )\n      );\n    });\n  }\n\n  /**\n   * 以某点为圆心，生成圆周上等分点的坐标\n   *\n   * @param {number} r 半径\n   * @param {cc.Vec2} pos 圆心坐标\n   * @param {number} count 等分点数量\n   * @param {number} [randomScope=80] 等分点的随机波动范围\n   * @returns {cc.Vec2[]} 返回等分点坐标\n   */\n  getCirclePoints(r: number, pos: cc.Vec2, count: number, randomScope: number = 60): cc.Vec2[] {\n    let points = [];\n    let radians = (Math.PI / 180) * Math.round(360 / count);\n    for (let i = 0; i < count; i++) {\n      let x = pos.x + r * Math.sin(radians * i);\n      let y = pos.y + r * Math.cos(radians * i);\n      points.unshift(cc.v3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));\n    }\n    return points;\n  }\n}\n"]}