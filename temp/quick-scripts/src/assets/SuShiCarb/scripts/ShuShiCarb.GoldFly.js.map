{"version":3,"sources":["assets\\SuShiCarb\\scripts\\ShuShiCarb.GoldFly.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShuShiCarbGoldFly extends cc.Component {\r\n  public static instance: ShuShiCarbGoldFly = null;\r\n  @property(cc.Node)\r\n  nodeLbFly: cc.Node = null;\r\n  @property(cc.Node)\r\n  startPoint: cc.Node = null;\r\n  @property(cc.Node)\r\n  endPoint: cc.Node = null;\r\n  @property(cc.Prefab)\r\n  coinPrefab: cc.Prefab = null;\r\n\r\n  coinPool: cc.NodePool = null;\r\n\r\n  onLoad() {\r\n    ShuShiCarbGoldFly.instance = this;\r\n    this.coinPool = new cc.NodePool();\r\n    this.initCoinPool();\r\n  }\r\n\r\n  initCoinPool(count: number = 5) {\r\n    for (let i = 0; i < count; i++) {\r\n      let coin = cc.instantiate(this.coinPrefab);\r\n      this.coinPool.put(coin);\r\n    }\r\n  }\r\n\r\n  playAnim() {\r\n    let randomCount = 5;\r\n    let stPos = this.startPoint.getPosition();\r\n    let edPos = this.endPoint.getPosition();\r\n    this.playCoinFlyAnim(randomCount, stPos, edPos);\r\n    this.nodeLbFly.active = true;\r\n    cc.tween(this.nodeLbFly)\r\n    .to(0.8, {y:edPos.y})\r\n    .call(() => {\r\n        this.nodeLbFly.y = 0;\r\n        this.nodeLbFly.active = false;\r\n    })\r\n    .start();\r\n  }\r\n\r\n  playCoinFlyAnim(count: number, stPos: cc.Vec2, edPos: cc.Vec2, r: number = 130) {\r\n    // 确保当前节点池有足够的金币\r\n    const poolSize = this.coinPool.size();\r\n    const reCreateCoinCount = poolSize > count ? 0 : count - poolSize;\r\n    this.initCoinPool(reCreateCoinCount);\r\n\r\n    // 生成圆，并且对圆上的点进行排序\r\n    let points = this.getCirclePoints(r, stPos, count);\r\n    let coinNodeList = points.map(pos => {\r\n      let coin = this.coinPool.get();\r\n      coin.setPosition(stPos);\r\n      this.node.addChild(coin);\r\n      return {\r\n        node: coin,\r\n        stPos: stPos,\r\n        mdPos: pos,\r\n        edPos: edPos,\r\n        dis: (pos as any).sub(edPos).mag()\r\n      };\r\n    });\r\n    coinNodeList = coinNodeList.sort((a, b) => {\r\n      if (a.dis - b.dis > 0) return 1;\r\n      if (a.dis - b.dis < 0) return -1;\r\n      return 0;\r\n    });\r\n\r\n    // 执行金币落袋的动画\r\n    coinNodeList.forEach((item, idx) => {\r\n      item.node.runAction(\r\n        cc.sequence(\r\n          cc.moveTo(0.3, item.mdPos),\r\n          cc.delayTime(idx * 0.01),\r\n          cc.moveTo(0.5, item.edPos),\r\n          cc.callFunc(() => {\r\n            this.coinPool.put(item.node);\r\n          })\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 以某点为圆心，生成圆周上等分点的坐标\r\n   *\r\n   * @param {number} r 半径\r\n   * @param {cc.Vec2} pos 圆心坐标\r\n   * @param {number} count 等分点数量\r\n   * @param {number} [randomScope=80] 等分点的随机波动范围\r\n   * @returns {cc.Vec2[]} 返回等分点坐标\r\n   */\r\n  getCirclePoints(r: number, pos: cc.Vec2, count: number, randomScope: number = 60): cc.Vec2[] {\r\n    let points = [];\r\n    let radians = (Math.PI / 180) * Math.round(360 / count);\r\n    for (let i = 0; i < count; i++) {\r\n      let x = pos.x + r * Math.sin(radians * i);\r\n      let y = pos.y + r * Math.cos(radians * i);\r\n      points.unshift(cc.v3(x + Math.random() * randomScope, y + Math.random() * randomScope, 0));\r\n    }\r\n    return points;\r\n  }\r\n}\r\n"]}