{"version":3,"sources":["assets/SuShiCarb/scripts/Game/ShuShiCarb.Hook.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport ShuShiCarbFood from \"./ShuShiCarb.Food\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ShuShiCarbHook extends cc.Component {\n    public static instance: ShuShiCarbHook = null;\n    @property(cc.Node)\n    hookRope: cc.Node = null;\n\n    @property(cc.Node)\n    hookSpriteOpen: cc.Node = null;\n\n    @property(cc.Node)\n    hookSpriteClose: cc.Node = null;\n\n    @property(cc.Node)\n    hookHead: cc.Node = null;\n    \n    hookSpeed = 30;\n    hookState = 0;\n\n    hookHeadBaseY: number = 80;\n    hookRopeBaseWidth: number = 0;\n    \n    mousePos;\n    // initialLength: number = 100;  \n    // maxLength: number = 750;      \n    // growing: boolean = false;\n    onLoad() {\n        ShuShiCarbHook.instance = this;\n        cc.Canvas.instance.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);  \n        //  this.hookHeadBaseY = this.hookHeadBaseY || this.hookHead.y;\n        //  this.hookRopeBaseWidth = this.hookRopeBaseWidth || this.hookRope.width;\n    }\n\n\n    initHook()  {\n        this.hookHead.y  = this.hookHeadBaseY;\n        this.hookRope.width = this.hookRopeBaseWidth;\n    }\n\n    start() {\n        this.initHook();\n    }\n    setHookState(hookState) {\n        this.hookState = hookState;\n        console.log(\"hookState \",hookState);\n    }\n\n    setHookSprite(isOpen: boolean) {\n        this.hookSpriteClose.active = !isOpen;\n        this.hookSpriteOpen.active = isOpen;\n    }\n \n\n    onMouseDown(event: cc.Event.EventMouse) {\n        if(this.hookState !== 0) {\n            return;\n        }\n        this.hookState = 1;\n        this.mousePos = this.node.parent.convertToNodeSpaceAR(cc.v2(event.getLocationX()));\n\n        console.log(this.mousePos);\n        this.node.setPosition(this.mousePos);\n    }\n\n    moveHookHead(dt) {\n        this.hookHead.y += dt * 30;\n        this.hookRope.width -= dt * 40;\n      \n    }\n\n   \n   \n\n    getHookHeadGlobalPos(): cc.Vec2 {\n        return this.node.convertToWorldSpaceAR(cc.v2(this.mousePos, this.hookHead.y - 25));\n    }\n    onDestroy() {\n        cc.Canvas.instance.node.off(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\n    }\n    update(dt) {\n        this.setHookSprite(true);\n        switch(this.hookState) {\n            case 1:\n                if(this.hookHead.y) {\n                    this.moveHookHead(this.hookSpeed * dt);\n                    if(this.hookHead.y >= 600) {\n                        this.hookState = 2;\n                     \n                    }\n                }\n                break;\n            case 2:\n                if(this.hookHead.y) {\n                    this.moveHookHead(-this.hookSpeed  * dt);\n                    this.hookHead.getComponent(cc.BoxCollider).enabled = false;\n                    if(this.hookHead.y  < 0) {\n                        this.hookHead.y = 100;\n                        this.hookRope.width = 50;\n                        this.hookState = 0;\n                        this.hookHead.getComponent(cc.BoxCollider).enabled = true;\n                    }\n                }\n               \n                this.setHookSprite(false);\n                break;\n            case 0:\n                default:\n                    break;\n        }\n    }\n\n    // update(dt: number) {\n    //     if (this.growing) {\n    //         if (this.node.height < this.maxLength) {\n    //             this.node.height += 200 * 0.2;\n    //             this.node.getComponent(cc.BoxCollider).size.height += 200 * 0.2;\n    //         } else {\n    //             this.growing = false;\n    //             this.node.height = this.initialLength;\n    //             this.node.getComponent(cc.BoxCollider).size.height = this.initialLength;\n    //         }\n    //     }\n    // }\n\n    onCollisionEnter(other) {\n        // // Lấy bounding box của thanh kéo\n        // const dragBarBoundingBox = this.node.getBoundingBoxToWorld();\n\n        // // Lặp qua tất cả các món ăn để kiểm tra va chạm\n        // for (let i = 0; i < this.foodContainer.children.length; i++) {\n        //     const foodItem = this.foodContainer.children[i];\n        //     const foodBoundingBox = foodItem.getBoundingBoxToWorld();\n\n        //     if (dragBarBoundingBox.intersects(foodBoundingBox)) {\n        //         // Nếu va chạm, kéo món ăn về vị trí nhất định\n        //         foodItem.setPosition(cc.v2(100, 100));  // Ví dụ đặt về vị trí (100, 100)\n        //         break;  // Dừng lại sau khi tìm thấy va chạm đầu tiên\n        //     }\n        // }\n        \n      \n    }\n}"]}